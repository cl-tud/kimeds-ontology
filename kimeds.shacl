@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix schema: <http://schema.org/> .
@prefix kimeds: <http://semanticweb.org/kettmann/ontologies/2023/5/kimeds-ontology#> .
@prefix iso: <http://semanticweb.org/kettmann/ontologies/2023/5/kimeds-ontology#> .
# @prefix iso: <https://www.iso.org/standard/72704.html#> .

### The KIMEDS Classes ###

kimeds:AssuranceSDAShape
  a sh:NodeShape ;
  sh:targetClass kimeds:AssuranceSDA ;
  sh:property [ # The subject of sh:property should be a PropertyShape, before we just had a property (w3c figure, Part 1, point 2)
      sh:path kimeds:hasSubAssuranceSDAI 
  ]
.

kimeds:AssuranceSDAIShape
  a sh:NodeShape ;
  sh:targetClass kimeds:AssuranceSDAI ;
  sh:property [
    sh:path kimeds:hasSafetyAssurance 
  ], [ 
    sh:path kimeds:hasSubAssuranceSDA
  ], [ 
    sh:path kimeds:hasSubAssuranceSDAI
  ] 
.

kimeds:DeviceComponentShape
  a sh:NodeShape ;
  sh:targetClass kimeds:DeviceComponent ;
  sh:property [
    sh:path kimeds:isPartOfDeviceComponent
  ]
.

kimeds:DeviceContextShape
  a sh:NodeShape ;
  sh:targetClass kimeds:DeviceContext
.

kimeds:DeviceSpecificHazardShape
  a sh:NodeShape ;
  sh:targetClass kimeds:DeviceSpecificHazard ;
  sh:property [
    sh:path kimeds:hasDeviceComponent ;	
    sh:message "Device specific hazard must have exactly one device component" ;
    sh:minCount 1 ;
    sh:maxCount 1 ; 
  ], [
    sh:path kimeds:hasDeviceFunction ;
    sh:message "Device specific hazard must have exactly one device function" ;
    sh:minCount 1 ;
    sh:maxCount 1 ; 
  ], [
    sh:path kimeds:hasHazard ;
    sh:message "Device specific hazard must have exactly one hazard" ;
    sh:minCount 1 ;
    sh:maxCount 1 ; 
  ], [
    sh:path kimeds:hasHazardousSituation ;
    sh:message "Device specific hazard must have exactly one hazardous situation" ;
    sh:minCount 1 ;
    sh:maxCount 1 ; 
  ]
.

kimeds:EventShape
  a sh:NodeShape ;
  sh:targetClass kimeds:Event ;
  sh:property [ 
    sh:path kimeds:hasPrecedingEvent;
  ]
.

kimeds:DeviceFunctionShape
  a sh:NodeShape ;
  sh:targetClass kimeds:DeviceFunction ;
.

kimeds:ImplementationManifestShape
  a sh:NodeShape ;
  sh:targetClass kimeds:ImplementationManifest ;
.

  kimeds:ManagedRiskShape
  a sh:NodeShape ;
  sh:targetClass kimeds:ManagedRisk ;
  sh:property [
    sh:path kimeds:hasDeviceSpecificHazard ;
    sh:message "Every managed risk must have exactly one device specific hazard" ;  
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:property [
      sh:path kimeds:hasHazardousSituation ;
      sh:property [
        sh:path kimeds:P1 ;
        sh:message "Every hazardous situation can only have one P1 for each managed risk. " ;
        sh:maxCount 1 ;
      ] ;
    ] ;
    sh:property [
      sh:path kimeds:hasHazard ;
      sh:property [
        sh:path kimeds:causesHarm ;
        sh:property [
          sh:path kimeds:P2 ;
          sh:message "Every harm can only have one P2 for each managed risk" ;
          sh:maxCount 1 ;
        ] ;
      ] ;
    ] ;
  ], [
    sh:path kimeds:hasPreRisk ;
    sh:message "Every managed risk must have exactly one pre risk" ;  
    sh:minCount 1 ;
    sh:maxCount 1 ;
  ], [
    sh:path kimeds:hasResidualRisk ;
    sh:message "Every managed risk must have exactly one residual risk" ;  
    sh:minCount 1 ;
    sh:maxCount 1 ;
  ], [
    sh:path kimeds:isMitigatedBy ;
    sh:message "Every managed risk must be mitigated" ;  
    sh:minCount 1 ;
  ]
.


kimeds:RiskMatrixShape
  a sh:NodeShape ;
  sh:targetClass kimeds:RiskMatrix ;
.

kimeds:RiskSDAShape
  a sh:NodeShape ;
  sh:targetClass kimeds:RiskSDA ;
  sh:property [
    sh:path kimeds:hasSubRiskSDA 
  ], [
    sh:path kimeds:hasSubRiskSDAI 
  ]
.

kimeds:RiskSDAIShape
  a sh:NodeShape ;
  sh:targetClass kimeds:RiskSDAI ;
  sh:property [
    sh:path kimeds:hasSubRiskSDAI 
  ]
.

kimeds:SafetyAssuranceShape
  a sh:NodeShape ;
  sh:targetClass kimeds:SafetyAssurance ;
.

kimeds:SDAShape
  a sh:NodeShape ;
  sh:targetClass kimeds:SDA ;
  sh:property [
      sh:path ( [ sh:zeroOrMorePath kimeds:hasSubSDA] kimeds:hasImplementationManifest ) ;
      sh:message "Every SDA needs a final mitigation (which has the Implementation Manifest)" ;
      sh:minCount 1 ;
    ]
.
